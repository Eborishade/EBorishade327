# Makefile : solutions_to_assgn/ch10
#----------------------------------------------------------------------
#  Generated by the genmk.sh utility; one of the "useful snips" within
#  this collection: https://github.com/kaiwan/usefulsnips
#
#  ASSUMPTIONS ::
#   1. the convenience files [../]../common.h and [../]../common.c
#      are present
#   2. the clang/LLVM compiler is installed
#   3. the indent(1L) utility is installed
#
#   WARNING! Do NOT start a source filename with 'core' !
#       (will get Erased when 'make clean' is performed).
#----------------------------------------------------------------------
## Pl check and keep or remove <foo>_dbg_[asan|ub|msan] targets
## as desired.
#ALL :=  pdf_rdr pdf_rdr_dbg pdf_rdr_dbg_asan pdf_rdr_dbg_ub pdf_rdr_dbg_msan
ALL :=  pdf_rdr pdf_rdr_dbg \
	smallbomb smallbomb_dbg \
	forkbomb forkbomb_dbg \
	fork2c fork2c_dbg \
	zombie zombie_dbg

CC=${CROSS_COMPILE}gcc
CL=${CROSS_COMPILE}clang

CFLAGS=-O2 -Wall -UDEBUG
CFLAGS_DBG=-g -ggdb -gdwarf-4 -O0 -Wall -Wextra -DDEBUG
CFLAGS_DBG_ASAN=${CFLAGS_DBG} -fsanitize=address
CFLAGS_DBG_MSAN=${CFLAGS_DBG} -fsanitize=memory
CFLAGS_DBG_UB=${CFLAGS_DBG} -fsanitize=undefined

LINKIN :=
 # user will need to explicitly set libraries to link in as required;
 # f.e. -lrt -pthread

all: ${ALL}
CB_FILES := *.[ch]

common.o: ../../common.c ../../common.h
	${CC} ${CFLAGS} -c ../../common.c -o common.o
common_dbg.o: ../../common.c ../../common.h
	${CC} ${CFLAGS_DBG} -c ../../common.c -o common_dbg.o

 #--- Sanitizers (use clang): common_dbg_*
common_dbg_asan.o: ../../common.c ../../common.h
	${CL} ${CFLAGS_DBG_ASAN} -c ../../common.c -o common_dbg_asan.o
common_dbg_ub.o: ../../common.c ../../common.h
	${CL} ${CFLAGS_DBG_UB} -c ../../common.c -o common_dbg_ub.o
common_dbg_msan.o: ../../common.c ../../common.h
	${CL} ${CFLAGS_DBG_MSAN} -c ../../common.c -o common_dbg_msan.o

#--- Target :: pdf_rdr
pdf_rdr.o: pdf_rdr.c
	${CC} ${CFLAGS} -c pdf_rdr.c -o pdf_rdr.o
pdf_rdr: common.o pdf_rdr.o
	${CC} -o pdf_rdr pdf_rdr.o common.o ${LINKIN}

pdf_rdr_dbg.o: pdf_rdr.c
	${CC} ${CFLAGS_DBG} -c pdf_rdr.c -o pdf_rdr_dbg.o
pdf_rdr_dbg: pdf_rdr_dbg.o common_dbg.o
	${CC} -o pdf_rdr_dbg pdf_rdr_dbg.o common_dbg.o ${LINKIN}

 #--- Sanitizers for pdf_rdr :: (use clang): <foo>_dbg_[asan|ub|msan]
pdf_rdr_dbg_asan.o: pdf_rdr.c
	${CL} ${CFLAGS_DBG_ASAN} -c pdf_rdr.c -o pdf_rdr_dbg_asan.o
pdf_rdr_dbg_asan: pdf_rdr_dbg_asan.o common_dbg_asan.o
	${CL} ${CFLAGS_DBG_ASAN} -o pdf_rdr_dbg_asan pdf_rdr_dbg_asan.o common_dbg_asan.o ${LINKIN}

pdf_rdr_dbg_ub.o: pdf_rdr.c
	${CL} ${CFLAGS_DBG_UB} -c pdf_rdr.c -o pdf_rdr_dbg_ub.o
pdf_rdr_dbg_ub: pdf_rdr_dbg_ub.o common_dbg_ub.o
	${CL} ${CFLAGS_DBG_UB} -o pdf_rdr_dbg_ub pdf_rdr_dbg_ub.o common_dbg_ub.o ${LINKIN}

pdf_rdr_dbg_msan.o: pdf_rdr.c
	${CL} ${CFLAGS_DBG_MSAN} -c pdf_rdr.c -o pdf_rdr_dbg_msan.o
pdf_rdr_dbg_msan: pdf_rdr_dbg_msan.o common_dbg_msan.o
	${CL} ${CFLAGS_DBG_MSAN} -o pdf_rdr_dbg_msan pdf_rdr_dbg_msan.o common_dbg_msan.o ${LINKIN}

#--- Target :: smallbomb
smallbomb.o: smallbomb.c
	${CC} ${CFLAGS} -c smallbomb.c -o smallbomb.o
smallbomb: common.o smallbomb.o
	${CC} -o smallbomb smallbomb.o common.o ${LINKIN}

smallbomb_dbg.o: smallbomb.c
	${CC} ${CFLAGS_DBG} -c smallbomb.c -o smallbomb_dbg.o
smallbomb_dbg: smallbomb_dbg.o common_dbg.o
	${CC} -o smallbomb_dbg smallbomb_dbg.o common_dbg.o ${LINKIN}

#--- Target :: forkbomb
forkbomb.o: forkbomb.c
	${CC} ${CFLAGS} -c forkbomb.c -o forkbomb.o
forkbomb: common.o forkbomb.o
	${CC} -o forkbomb forkbomb.o common.o ${LINKIN}

forkbomb_dbg.o: forkbomb.c
	${CC} ${CFLAGS_DBG} -c forkbomb.c -o forkbomb_dbg.o
forkbomb_dbg: forkbomb_dbg.o common_dbg.o
	${CC} -o forkbomb_dbg forkbomb_dbg.o common_dbg.o ${LINKIN}

#--- Target :: fork2c
fork2c.o: fork2c.c
	${CC} ${CFLAGS} -c fork2c.c -o fork2c.o
fork2c: common.o fork2c.o
	${CC} -o fork2c fork2c.o common.o ${LINKIN}

fork2c_dbg.o: fork2c.c
	${CC} ${CFLAGS_DBG} -c fork2c.c -o fork2c_dbg.o
fork2c_dbg: fork2c_dbg.o common_dbg.o
	${CC} -o fork2c_dbg fork2c_dbg.o common_dbg.o ${LINKIN}

#--- Target :: zombie
zombie.o: zombie.c
	${CC} ${CFLAGS} -c zombie.c -o zombie.o
zombie: common.o zombie.o
	${CC} -o zombie zombie.o common.o ${LINKIN}

zombie_dbg.o: zombie.c
	${CC} ${CFLAGS_DBG} -c zombie.c -o zombie_dbg.o
zombie_dbg: zombie_dbg.o common_dbg.o
	${CC} -o zombie_dbg zombie_dbg.o common_dbg.o ${LINKIN}


# indent- "beautifies" C code into the "Linux kernel style".
# (cb = C Beautifier :) )
# Note! original source file(s) is overwritten, so we back it up.
cb: ${CB_FILES}
	mkdir bkp 2> /dev/null; cp -f ${CB_FILES} bkp/
	indent -linux ${CB_FILES}

clean:
	rm -vf ${ALL} core* vgcore* *.o *~
